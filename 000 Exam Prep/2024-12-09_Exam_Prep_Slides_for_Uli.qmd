---
title: "Exam structure Ws 24/25"
format: 
  html:
    self-contained: true
    theme: minty
editor: visual
---

## Exam:

-   Exam will be paper & pen

-   Questions and tasks are based on the lecture and tutorials - so knowing the idea behind a method or approach and also being able to apply that knowledge to practical tasks

-   There will be no coding ‚Äúby hand‚Äù but you will still work with code - Learning the most important terms helps you in the exam and also in your own programming progress.

## Structure

-   ‚Öì of points is in MC questions (examples below)

-   ‚Öî of points in text tasks

    1.  Code explanation (extensive example below)

    2.  Interpretation of regression (small example below, exam task will be more extensive)

    3.  something on trees/validation/evaluation etc. (no example since we have not had these topics yet)

## **Task 1 - MC tasks:**

can be based on lecture content and tutorial content, asking about concepts, programming-terms, statistical formulas‚Ä¶

1.  The challenge of the Big Data revolution can be described with several V‚Äôs. Which term is not part of the challenge?

    a.  Volume of data
    b.  Veracity of data
    c.  Visibility of data
    d.  Velocity of data

2.  What does the gg in the package ggplot2 stand for?

    a.  generation of graphics
    b.  gestalt rules of graphics
    c.  grammar of graphics
    d.  generalization of graphics

3.  Which of the following statements is/are not true?

    a.  Lists are special types of vectors which might contain elements of different classes.
    b.  Lists are special types of data frames.
    c.  Factors are used to represent categorical data and can be unordered or ordered.
    d.  Unlike matrices, data frames can store different classes of objects in each column.

## Task 2 - Code explanation

1.  We have a code snippet working with the examscores dataset that you know from the tutorials.

    The code takes certain steps with the data like transformations, selection etc. Trace those steps and execute them manually to fill in the data table by hand. You might have to delete/create columns and/or rows.

    ```{r}
    library(sozoekds)
    exam_score <- examscores
    exam_score$full_score <-(exam_score$MathScore + exam_score$WritingScore +
    exam_score$ReadingScore)/3


    exam_score$full_score <- round(exam_score$full_score, digits=0)
    exam_score$grade <- ifelse(exam_score$full_score >= 90, "A",
                    	ifelse(exam_score$full_score >= 80 &  
                             	exam_score$full_score <= 89, "B",
                     	ifelse(exam_score$full_score >= 70 &  exam_score$full_score <= 79, "C",
                            	ifelse(exam_score$full_score >= 60 &  exam_score$full_score <= 69, "D", "E"
                                  	))))
    ```

![](images/clipboard-373697182.png)

```{r}
#| echo: false #supresses showing of code
#| output: false #supresses output
#| label: Sample data was generated with this code

library(dplyr)

set.seed(123)  #Seed for reproducability
sampled_examscores <- exam_score[sample(nrow(exam_score), 15), ]

sampled_examscores$EthnicGroup <- NULL
sampled_examscores$ParentEduc <- NULL
sampled_examscores$LunchType <- NULL
sampled_examscores$ParentMaritalStatus <- NULL
sampled_examscores$PracticeSport <- NULL
sampled_examscores$IsFirstChild <- NULL
sampled_examscores$NrSiblings <- NULL
sampled_examscores$TransportMeans <- NULL

rename(sampled_examscores, observation_number = X )


```

2.  We have a code snippet working with the dataset on income and years of experience that you know from the tutorials.¬†

Answer the following questions:

a.  Say we have a linear regression model:\
    monthly_income=ùõΩ1 years_of_experience + ùõΩ0.\
    Given the plots below: What is the approximate value for ùõΩ0 and¬† ùõΩ1?
b.  What does the value for ùõΩ0 indicate?
c.  What does the value for ùõΩ1 indicate?
d.  What does the error band indicate?
e.  Given the following code block, which of the following 4 plots is expected and why?

dataset:

```{r}
#| echo: false #supresses showing of code
#| output: true
#| label: Sample data for income and expirience was generated with this code


# Set a seed for reproducibility
set.seed(123)

# Generate random data for years of experience
years_of_experience <- seq(0, 30, by = 1)  # 0 to 30 years

# Create income based on years of experience with a reasonable starting value
income <- 1500 + 45 * years_of_experience + rnorm(length(years_of_experience), mean = 0, sd = 100)  # Adding random noise

# Create a data frame
data <- data.frame(years_of_experience, income)
data$income <- round(data$income, digits = 2)

library(knitr)

kable(data)

```

code:

```{r}
#| output: false #suppresses output
library(sozoekds) # it contains airbnbsmall dataset
library(ggplot2)

# Plot code
ggplot(data, aes(x = years_of_experience, y = income)) +
  geom_point(color = "blue") +  # Add points
  geom_smooth(method = "lm", color = "red", se = TRUE, fill = "orange") +
  labs(title = "Scatterplot of Monthly Income vs. Years of experience",
       x = "Years of Experience in Company",
       y = "Monthly Income (EUR)") +
  scale_y_continuous(breaks = seq(0, 3000, by = 50)) +
  scale_x_continuous(breaks = seq(0, 30, by = 2)) +
  coord_cartesian(xlim = c(0, 30), ylim = c(1400, 2500)) +
  theme_minimal()
```

a\)

![](images/2_a_plot.png)

b\)

![](images/2_b_plot.jpg)

c\)

![](images/2_c_plot.jpg)

d\)

![](images/2_d_plot.jpg)

## Task 3 - Regressions

#### *Interpreting a given model*

We've got a linear regression and this is it's output (model1)

```{r}
library(sozoekds)
airbnb_data <- airbnbsmall

model1 <- lm(price~n_accommodates+d_kitchen+n_bathrooms+d_heating,data=airbnb_data)
```

1.  Explain the model in your own words

2.  Write down the statistical formula for our specific model

3.  Interpret the coefficients (value, meaning, significance)

    ```{r}
    summary(model1)
    ```

4.  Model comparison. Compare the first model (model1) with this one (model2) - choose the one with the better in-sample fit and justify your decision.

    ```{r}
    model2<-lm(price~n_accommodates,data=airbnb_data)
    summary(model2)
    ```
