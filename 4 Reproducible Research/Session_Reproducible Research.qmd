---
title: "Data Science for Socioeconomists"
subtitle: "Excercise 4 - Reproducible Research"
author: Lisa Wegner and Junbo Huang
format:
  revealjs:
    incremental: false
    transition: none
    background-transition: none
    theme: white
    slide-number: true
    footer: "Data Science for Socioeconomists"
    embed-resources: true
    preview-links: auto 
    smaller: false
scrollable: true
execute:
   echo: true
editor: visual
code-annotations: below
---

# Agenda for today

1.  Troubleshooting Guide
2.  Guidelines for names
3.  Guidelines for comments
4.  Input on Reproducible science
    1.  Recap
    2.  Quiz
    3.  Exercise to improve code in matters of reproduction
5.  Tasks

# Troubleshooting

![](https://cdn.memes.com/up/23422781594433255/i/1595886688295.jpg)

-   We have created a link-list with all things helpful - this can be found under "learning materials" [at OpenOlat](https://www.openolat.uni-hamburg.de/auth/RepositoryEntry/340099667/CourseNode/108537309191894)

-   The code of the lecture-, exercise- and solution slides can be copied! This way you can adapt it to your needs and don't need to start from scratch.

## Usage of stackoverflow

## Usage of Google

## Usage of AI tools like UHHGPT

::: callout-warning
Even though its tempting: Try not to simply copy-paste answers given by AI. Instead you should try to understand the code there and work with that new knowledge in your own code.
:::

***Helpful prompts:***

-   To understand code from lecture/tutorial-slides: "Please explain *this code* to me and tell me, which steps were taken."

-   To inform yourself about other solutions: "I have *this code* for *this kind of problem*. Please show me a different way of solving that problem"

-   To inform yourself about packages/functions: "I want to solve *this problem*. Is there an existing package for that purpose? Can I use an existing function? Please tell me its name and give an example for the usage."

    # Guidelines to names in coding

    *"Naming variables follow a simple idea: Create variables that describe their function and which follow a consistent theme throughout your code."* (Coding best practices [by University of Colorado Boulder](https://curc.readthedocs.io/en/latest/programming/coding-best-practices.html))

-   Multiword expressions - choose **one** theme and stick with it!

    -   whitespace should not be used

    -   Snakecase: variable_one; variable_two (Words are delimited by an underscore)

    -   PascalCase: VariableOne; VariableTwo (Words are delimited by capital letters)

    -   camelcase: variableOne; variableTwo (Words are delimited by capital letters, except the initial word)

# Guidelines for using comments

*" It is entirely possible to “over comment” code. Code should be designed in an efficient, consistent and intuitive manner such that comments enhance user understanding but are not needed to describe the entire code."* (Coding best practices [by University of Colorado Boulder](https://curc.readthedocs.io/en/latest/programming/coding-best-practices.html))

```{r}
test_function <- function(birthyear) { #commenting here works fine
   age <- #commenting here creates an error 2024 - birthyear 
     age <- 2024 - birthyear
   # commenting here creates an error return (age)
   return(age) # commenting here works
}

test_function(1921)
```

# Recap: Reproducible Science

::: callout-important
-   Reproducibility isn't a guarantee of quality
    -   Value depends on other factors like originality of the question, validity of hypotheses, relevance of results to the field, and the quality of conclusions drawn
    -   Specific context or conditions could limit the generalizability
-   Diversity in research standards: Physical experiments have different standards than social science studies
-   Human factors and interpretation can influence the interpretation and conclusions of results
:::

# MC Questions

## **Question 1:** What is the primary objective of reproducible research in data science?

a.  To make research findings difficult to replicate
b.  To ensure that research findings can be independently verified and replicated
c.  To hide the code and data used in the research
d.  To make research findings accessible only to a select group

## **Question 2:** Which of the following is NOT a benefit of reproducible research?

a.  Improved collaboration and transparency
b.  Enhanced credibility and trust in research findings
c.  Making it harder for others to understand and replicate the study
d.  Easier identification of errors and corrections in research

## **Question 3:** What is the primary benefit of sharing negative or null results in research?

a.  It enhances competition among researchers
b.  It prevents other researchers from exploring similar hypotheses
c.  It reduces publication bias and promotes scientific integrity
d.  It discourages collaboration between research teams

## **Question 4:** What role does documentation play in reproducible research?

a.  It makes it harder for others to understand the research process
b.  It helps in understanding and replicating the research
c.  It's unnecessary in data science research
d.  It slows down the research process

::: notes
1.  **Question 1:**

    -   Correct Answer: To ensure that research findings can be independently verified and replicated

2.  **Question 2:**

    -   Correct Answer: Making it harder for others to understand and replicate the study

3.  **Question 3:**

    -   Correct Answer: It reduces publication bias and promotes scientific integrity

4.  **Question 4:**

    -   Correct Answer: It helps in understanding and replicating the research
:::

# Exercise:

# 1. Correct poorly documented code

The provided code snippet performs a data analysis task but lacks proper documentation, comments, and variable labels. Your task is to enhance the code by adding comments, providing clear variable names, and improving readability. Rewrite the code to make it more understandable for future collaborators.

# Code

```{r}
analyze_data <- function(df) {
  a <- df[1] * 2
  b <- df[2] + 10
  result <- a + b
  return(result)
}

# Main program
data <- c(7, 8, 12, 4, 6)
output <- analyze_data(data)
print(output)
```

## **Questions:**

1.  Identify at least three issues with the provided code example in terms of documentation and variable naming.
2.  Why is it important to have clear and descriptive variable names in code for reproducible research?
3.  How does adding comments to code contribute to the reproducibility of research?
4.  Add-on: How can the code be made more performant? How can we avoid error-messages?

# 2. Rework of last weeks code

Take a look at your code from last week and enhance its readability and reproducibility. Things to look out for could be

1.  Look at variable names. Are they self-explanatory?
2.  Place comments in places where they are needed
