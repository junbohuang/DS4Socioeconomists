---
title: "Exam_2_Draft"
format: 
  html:
    self-contained: true
    theme: minty
editor: visual
---

## Info on exam

There will be four different tasks with various sub-tasks and the following points:

1.  single choice questions - 30p
2.  Code explanation - 19p
3.  Regression - 23p
4.  Regularization and Generalisability - 18p

-   The exam consists of 90p total.

-   The pure processing time is 120 minutes

-   authorized aids: Dictionary and calculator / zugelassene Hilfsmittel: Wörterbuch und Taschenrechner

-   Be brief, be precise. Only answer the things that are asked. There are no extra points if you write more than required!

-   The exam consists of two parts: a multiple choice and a text task part. Both parts must be completed in full.

-   Define each abbreviation (e.g. σ) at least once if it is not already predefined!

-   You are not supposed to answer with handwritten code but rather with “normal” text.

-   Use as many post decimal digits (“Nachkommastellen”) as stated - if NOT stated, use two

-   If you need additional space, use the attached empty pages and leave a clear remark at each task, that you used them and where to find your answer(s).

::: callout-important
If you are not sure on the translation of a certain term from English to German please ask the exam supervisors!
:::

# Task 1: single choice Questions (30p)

10 questions, 3p each!

::: callout-important
Please note, that exactly one single answers is correct.
:::

## **Task 1.1**

Which of the following statements describes symptoms of **overfitting** in a linear regression model?

a.  ⬜ The model performs well on training data but poorly on unseen test data.
b.  ⬜ The model has high bias and performs poorly on both training and test data.
c.  ⬜ The model performs well on both training and test data.
d.  ⬜ The model has low variance and captures no noise in the training data.

## Task 1.2

In the context of data science, which of the following best describes the concept of **generalizability**?

a.  ⬜ The ability of a model to perfectly predict the target variable for the training data.
b.  ⬜ The ability of a model to identify patterns in a dataset that can be applied to other similar datasets.
c.  ⬜ The ability of a model to memorize specific examples from the training data.
d.  ⬜ The ability to visualize and interpret the training data in multiple ways.

## Task 1.3

What does $R^2$ **represent in a linear regression model**?

a.  ⬜ The percentage of the total variation in the dependent variable explained by the independent variable(s).
b.  ⬜ The strength and direction of the correlation between the dependent and independent variables.
c.  ⬜ The average error of the predictions made by the model.
d.  ⬜ The proportion of the independent variable's variance that is unexplained by the model.

## Task 1.4

Which of the following best describes the purpose of a **simple linear regression model?**

a.  ⬜ To determine the exact cause of changes in a dependent variable.
b.  ⬜ To estimate the relationship between one dependent variable and one independent variable.
c.  ⬜ To calculate the mean of a dataset.
d.  ⬜ To analyse the relationship between multiple dependent variables.

## Task 1.5

In regularization techniques like Ridge and Lasso regression, what effect does increasing the **regularization parameter** ($\lambda$) have on the model?

a.  ⬜ It increases the complexity of the model by allowing larger coefficients.
b.  ⬜ It reduces the magnitude of small coefficients, leading to simpler models and less overfitting.
c.  ⬜ It has no impact on the model's coefficients or complexity.
d.  ⬜ It increases the model's sensitivity to noise in the training data.

## Task 1.6

Which of these statements is correct when it comes to the use of **test data and training data in data science**?

a.  ⬜ Training data is used to evaluate the performance of the model, while test data is used to train the model.
b.  ⬜ Both training and test data should always contain the same data points to make comparisons easier.
c.  ⬜ A model is fit on the training set, and the fitted model is used to predict the responses for the observations in the validation set.
d.  ⬜ We always train a model on 5% of the data set and validate on 95% of the data for having greater generalization performance.

## Task 1.7

In R, what function is commonly used to **transform data into a data frame**?

a.  ⬜ matrix()
b.  ⬜ as.data.frame()
c.  ⬜ df()
d.  ⬜ table()

## Task 1.8

Which package in R is commonly used for creating advanced **graphics**?

a.  ⬜ ggplot2
b.  ⬜ dplyr
c.  ⬜ tidyr
d.  ⬜ shiny

## Task 1.9

What does '**pruning**' refer to in the context of decision trees?

a.  ⬜ Increasing the number of features considered in the model to provide more complexity.
b.  ⬜ Aggregating the results of multiple decision trees into a single model for better accuracy.
c.  ⬜ Refining the model by removing branches that do not significantly contribute to predictive power
d.  ⬜ Utilizing cross-validation techniques to determine significant branches.

## Task 1.10

After fitting a linear regression model in R using the `lm()` function, you obtain the following output for the model coefficients:

$$\text{(Intercept)} = 5.2, \quad \beta_1 = 2.4, \quad \beta_2 = -0.8$$ Given this model:

$$ \hat{y} = 5.2 + 2.4 \times X_1 - 0.8 \times X_2$$

What can be inferred from $\beta_1$ in this model?

a.  ⬜ For each unit increase in $X_1$, the predicted value of $y$ will increase by 5.2.
b.  ⬜ For each unit increase in $X_1$, the predicted value of $y$ will increase by 2.4, assuming $X_2$ remains constant.
c.  ⬜ For each unit increase in $X_2$, the predicted value of $y$ will increase by 0.8, assuming $X_1$ remains constant.
d.  ⬜ The value of $y$ is independent of $X_1$ and only depends on $X_2$.

# Task 2: Code interpretation (19p)

The dataset `energy` will be used in multiple tasks. In task 2.1 you will clean it, in task 2.2 you will use it in a plotting task.

`energy` includes data on a countries CO2-emissions and related metrics. In the data description you can see the variables meaning and units.

```{r}
#| echo: false
options(scipen = 999)
library(readr)
energy <- read_csv("energy.csv", show_col_types = FALSE)
energy<- na.omit(energy)
```

## Data Description

+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| name of the variable            | explanation                                                                                                                                                                          | explanation on unit                                                                                                                                                                                                                                 |
+=================================+======================================================================================================================================================================================+=====================================================================================================================================================================================================================================================+
| **Country**                     | Country in question                                                                                                                                                                  | \-                                                                                                                                                                                                                                                  |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Energy_type**                 | Type of energy source                                                                                                                                                                | possible values: all_energy_types (for a sum of all energy types)                                                                                                                                                                                   |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | coal                                                                                                                                                                                                                                                |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | natural_gas                                                                                                                                                                                                                                         |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | renewables                                                                                                                                                                                                                                          |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | ...                                                                                                                                                                                                                                                 |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Year**                        | Year the data was recorded                                                                                                                                                           | \-                                                                                                                                                                                                                                                  |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Energy_consumption** -        | Amount of Consumption for the specific energy source, measured (quad Btu)                                                                                                            | -   Energieeinheit, die 1 Billiarde (10 ^15^ ) British Thermal Units (BTU) entspricht                                                                                                                                                               |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Unit of energy, equivalent to 1 quadrillion (10 ^15^ ) British Thermal Units (BTU)\]                                                                                                                                                            |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Energy_production**           | Amount of Production for the specific energy source, measured (quad Btu)                                                                                                             | -   Energieeinheit, die 1 Billiarde (10 ^15^ ) British Thermal Units (BTU) entspricht                                                                                                                                                               |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Unit of energy, equivalent to 1 quadrillion (10 ^15^ ) British Thermal Units (BTU)\]                                                                                                                                                            |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **GDP**                         | Countries GDP at purchasing power parities, measured (Billion 2015\$ PPP)                                                                                                            | -   Das BIP der Länder, berechnet in Kaufkraftparitäten, bezieht sich auf die gesamte wirtschaftliche Produktion eines Landes, die unter Berücksichtigung der Preisniveaudifferenzen zwischen den Ländern in Milliarden von 2015 USD gemessen wird. |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Countries' GDP at purchasing power parities refers to the total economic output of a country adjusted for price level differences across countries, measured in billions of 2015 U.S. dollars using purchasing power parity (PPP) as a basis.   |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Population**                  | Population of specific Country, measured (Mperson)                                                                                                                                   | -   Bevölkerung in Millionen                                                                                                                                                                                                                        |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Population measured in Millions                                                                                                                                                                                                                 |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Energy_intensity_per_capita** | Energy intensity is a measure of the energy inefficiency of an economy. It is calculated as units of energy per unit of capita (capita = individual person), measured (MMBtu/person) | -   Die Energieintensität misst, wie viel Energie pro Person in einer Volkswirtschaft verbraucht wird und spiegelt deren Energieineffizienz wider, gemessen in Millionen British Thermal Units pro Person (MMBtu/Person).                           |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Energy intensity measures how much energy is consumed per person in an economy, reflecting its energy inefficiency, and is expressed in million British thermal units per person (MMBtu/person).                                                |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **Energy_intensity_by_GDP**     | Energy intensity is a measure of the energy inefficiency of an economy. It is calculated as units of energy per unit of GDP, measured (1000 Btu/2015\$ GDP PPP)                      | -   Die Energieintensität misst, wie viel Energie im Verhältnis zur wirtschaftlichen Produktion eines Landes verwendet wird, ausgedrückt in (1000) Energieeinheiten pro Einheit des BIP.                                                            |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   Energy intensity measures how much energy is used in relation to the economic output of a country, expressed as (1000) energy units per unit of GDP.                                                                                            |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **CO2_emission** -              | The amount of C02 emitted, measured (MMtonnes CO2)                                                                                                                                   | -   Die Menge an CO2-Emissionen wird in Millionen Tonnen (MMtonnes CO2) gemessen.                                                                                                                                                                   |
|                                 |                                                                                                                                                                                      |                                                                                                                                                                                                                                                     |
|                                 |                                                                                                                                                                                      | -   The amount of CO2 emitted is measured in million metric tonnes (MMtonnes CO2).                                                                                                                                                                  |
+---------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

## Task 2.1 (13p in total)

Below is a subset of the dataset `energy`. The code is used to prepare the data for further analysis in task 3. Follow the steps in the code and update the table by hand so that the printout represents the dataset `energy_2019_clean` (9p).

```{r}
load("energy.RData")

energy$Year <- ifelse(energy$Year >=2019, energy$Year, NA)

energy$Energy_type <- ifelse(energy$Energy_type == "all_energy_types", energy$Energy_type, NA)

energy$Country <- ifelse(energy$Country != "World", energy$Country, NA)

energy_2019_clean <- na.omit(energy)
```

**Task** **2.1.2. Did you remove singular values and/or rows and/or columns? If you did so, explain why. (2p)**

> > code line 4: removing 4 lines due to including NAs

**Task** **2.1.2. Did you change the content singular values and/or rows and/or columns? If you did so, explain why. (2p)**

> > code line 1: changing year prior to 2019 to NA -\> 1p
> >
> > code line 2: changing energy type "coal" to NA -\> 1p
> >
> > code line 3: changing Country "world" to NA while keeping all other values -\> 1p

**Task** **2.1.3. After applying the code: Are any values left that could potentially lead to problems? If so, how could we fix that problem (answer verbally, no code needed)? (2p)**

> year 2021 is still included, but we want the data set to only include year=2019

![](table_exam.PNG)

> code line 1: changing year prior to 2019 to NA -\> 1p
>
> code line 2: changing energy type "coal" to NA -\> 1p
>
> code line 3: changing Country "world" to NA while keeping all other values -\> 1p
>
> code line 4: removing 4 lines due to including NAs -\> 4p

## Task 2.2 (6p in total)

**Task 2.2 (3p) What kind of plot gets generated by this code? Choose the correct one below and justify your decision.**

```{r}
#| output: false

library(ggplot2)
library(dplyr)

energy_clean_2019 <- read.csv("energy_clean_2019.csv")

ggplot(data=energy_clean_2019, mapping=aes(x=Energy_intensity_per_capita,y=CO2_emission)) +
  geom_point() +
  geom_smooth(method = lm) +
 scale_x_continuous(breaks = seq(0, 400, by = 50), limits = c(0,400)) +
scale_y_continuous(breaks = seq(0, 200, by = 50), limits = c(0, 200))
  
```

**Task 2.3 (3p) Why are the other plots the wrong choice for question 2.1?**

Plot 1

```{r}
#| echo: false
library(ggplot2)
ggplot(data=energy_clean_2019, mapping=aes(x=Energy_intensity_per_capita,y=CO2_emission)) +
  geom_point() +
geom_smooth(method = "lm", formula = y ~ poly(x, 2)) +
 scale_x_continuous(breaks = seq(0, 650, by = 50)) +
scale_y_continuous(breaks = seq(0, 300, by = 50), limits = c(0, 300))
```

Plot 2

```{r}
#| echo: false
library(ggplot2)
ggplot(data=energy_clean_2019, mapping=aes(x=Energy_intensity_per_capita,y=CO2_emission)) +
  geom_point() +
  geom_smooth(method = lm) +
 scale_x_continuous(breaks = seq(0, 400, by = 50), limits = c(0,400)) +
scale_y_continuous(breaks = seq(0, 200, by = 50), limits = c(0, 200))
```

Plot 3

```{r}
#| echo: false
library(ggplot2)
ggplot(data=energy_clean_2019, mapping=aes(x=Energy_intensity_per_capita,y=CO2_emission)) +
  geom_point() +
  geom_smooth(method = lm) +
 scale_x_continuous(breaks = seq(0, 650, by = 50)) +
scale_y_continuous(breaks = seq(0, 300, by = 50), limits = c(0, 300))
```

Plot 4

```{r}
#| echo: false
library(ggplot2)
ggplot(data=energy_clean_2019, mapping=aes(x=Energy_intensity_per_capita,y=CO2_emission)) +
  geom_point() +
 scale_x_continuous(breaks = seq(0, 650, by = 50)) +
scale_y_continuous(breaks = seq(0, 300, by = 50), limits = c(0, 300))
```

# Task 3: Regression (23p)

We’ve got two models: a linear regression one and a logistic regression, whose results can be found in the code below. Use them to answer the following questions:

linear model:

```{r}
linear_model1 <- lm(CO2_emission ~ Population + GDP , data = energy_clean_2019)
```

logistic model:

```{r}

mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)

energy_clean_2019$high_Co2 <- ifelse(
  energy_clean_2019$CO2_emission < mean_CO2_emission, 
  "0",  
  "1"
)

energy_clean_2019$high_Co2 <- as.factor(energy_clean_2019$high_Co2)


logistic_model <- glm(formula = high_Co2 ~ Energy_intensity_by_GDP + Energy_intensity_per_capita, 
    family = binomial, data = energy_clean_2019)
```

## Task 3.1 (4p)

What kind of question do the different models answer? Think of a research question for the given `linear_model` and of a research question for the given`logistic_model`.

## Task 3.2 (3p)

Explain each given model in your own words

## Task 3.3 (2p)

Write down the mathematical formula for each of the models given.

## Task 3.4 (4,5p)

Interpret the coefficients for the linear model (value, meaning, significance), use **five** post decimal positions

```{r}
options(scipen = 999)

linear_model1 <- lm(CO2_emission ~ Population + GDP , data = energy_clean_2019)
summary(linear_model1)

```

## Task 3.5 (3p)

A friend working with the same dataset chose other variables to explain the CO2 emission of a country. You came up with linear_model1, they came up with linear_model2. Which one would you prefer in terms of the in sample fit?

```{r}
linear_model1 <- lm(CO2_emission ~ Population + GDP , data = energy_clean_2019)
summary(linear_model1)

linear_model2 <- lm(CO2_emission ~ GDP + Energy_consumption , data = energy_clean_2019)
summary(linear_model2)
```

## Task 3.5 (4,5p)

Interpret the coefficients for the logistic model (value, meaning, significance), use **five** post decimal positions

```{r}
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)

energy_clean_2019$high_Co2 <- ifelse(
  energy_clean_2019$CO2_emission < mean_CO2_emission, 
  "0",  
  "1"
)

energy_clean_2019$high_Co2 <- as.factor(energy_clean_2019$high_Co2)


logistic_model <- glm(formula = high_Co2 ~ Energy_intensity_by_GDP + Energy_intensity_per_capita, 
    family = binomial, data = energy_clean_2019)
summary(logistic_model)
```

## Task 3.6 (2p)

What kind of problem could occur when we add Energy_consumption and Energy_production as additional regressors to the logistic regression model?

# Task 4: Regularization and Generalizability - 18p

Given the energy_clean_2019 dataset and the linear regression models below,

CO2_emission = $\beta_0$ + $\beta_1$ Population + $\beta_2$ GDP + $\beta_3$ Energy_production + $\beta_4$ Energy_intensity_by_GDP

answer the following questions:

## Task 4.1 Regularization: Ridge and Lasso regression (6 points)

**Task 4.1.1** Suppose you want to use Ridge or Lasso regression to reduce overfitting of the model to training data. **Say, variables GDP and Energy_intensity_by_GDP are highly correlated. How might the coefficients (**$\beta_2$ **and** $\beta_4$**) change if you use ridge regression?** (3p)

> **Answer:** Ridge regression will shrink their coefficients proportionally, reducing their individual contributions but keeping both predictors in the model.

**Task 4.1.2** **What about lasso regression?** (3p)

> **Answer:** In Lasso regression, when variables GDP and Energy_intensity_by_GDP are highly correlated, one of the coefficients ($\beta_2$ or $\beta_4$​) may be reduced to exactly zero, effectively excluding one of the correlated predictors from the model.

## Task 4.2 Generalizability Testing (6 points)

**Task 4.2.1** Generalizability refers to models' ability to make correct predictions on unseen data. Given the energy_clean_2019 dataset, **please describe a method to evaluate the generalizability of the above linear regression model.** (2p)

> **Answer**: split the data into training, validation and/or testing set; apply validation method such as k-fold cross-validation

**Task 4.2.2** Given the following results from a 5-fold cross-validation, **calculate the average R-squared value**. (2p)

| **Fold** | **R-squared Value** |
|----------|---------------------|
| Fold 1   | 0.85                |
| Fold 2   | 0.85                |
| Fold 3   | 0.84                |
| Fold 4   | 0.83                |
| Fold 5   | 0.83                |

> **Answer:** (0.85 + 0.85 + 0.84 + 0.83 + 0.83) / 5 = 0.84

Task 4.2.3. **What does this average, combined with the consistency of the fold results, tell you about the model's ability to generalize?** (2p)

**Answer**: The average R-squared value of 0.84 indicates that, on average, the model explains 84% of the variance in the data, which suggests good predictive performance. The results are consistent across the folds (with values ranging from 0.83 to 0.85), showing that the model performs reliably on different subsets of the data. This consistency indicates that the model generalizes well to unseen data and is not overfitting or underfitting.

## Task 4.3 **Decision Tree Construction (6 points)**

The following code snippet create **df_task4_decision_tree dataset**, a subset of **energy_clean_2019 dataset. (**You do not need to understand the code to solve the task.)

```{r}

# Select relevant columns from energy_clean_2019 where Energy_type is "all_energy_types"
df_task4 <- energy_clean_2019[energy_clean_2019$Energy_type == "all_energy_types", 
                              c('Country', 'GDP', 'Population', "CO2_emission")]

# Define a list of countries of interest for filtering
country_of_interest <- c("Algeria", "Bhutan", "Norway", "Central African Republic",
                         "Japan", "Denmark", "Malawi", "Slovenia", "Mozambique", "Latvia")

# Filter df_task4 to retain only rows corresponding to the selected countries
df_task4_decision_tree <- df_task4[df_task4$Country %in% country_of_interest,]

# Function to categorize numerical values based on quantiles from the full dataset
categorize_variable <- function(var, full_var) {
  quantiles <- quantile(full_var, probs = c(0.33, 0.66), na.rm = TRUE)
  cut(var, breaks = c(-Inf, quantiles[1], quantiles[2], Inf), labels = c("Low", "Medium", "High"), include.lowest = TRUE)
}

# Apply categorization based on quantiles from the original df_task4 dataset
df_task4_decision_tree$GDP <- categorize_variable(df_task4_decision_tree$GDP, df_task4$GDP)
df_task4_decision_tree$Population <- categorize_variable(df_task4_decision_tree$Population, df_task4$Population)
df_task4_decision_tree$CO2_emission <- categorize_variable(df_task4_decision_tree$CO2_emission, df_task4$CO2_emission)

# Convert columns to factors
df_task4_decision_tree$GDP <- as.factor(df_task4_decision_tree$GDP)
df_task4_decision_tree$Population <- as.factor(df_task4_decision_tree$Population)
df_task4_decision_tree$CO2_emission <- as.factor(df_task4_decision_tree$CO2_emission)

```

Given the following table (df_task4_decision_tree)**,** **draw the decision tree you would construct for predicting CO2_emission based on GDP and Income Population.** (6p)

| Country                  | GDP    | Population | CO2_emission |
|:-------------------------|:-------|:-----------|:-------------|
| Algeria                  | High   | High       | High         |
| Japan                    | High   | High       | High         |
| Denmark                  | High   | Medium     | Medium       |
| Norway                   | High   | Medium     | Medium       |
| Slovenia                 | Medium | Low        | Medium       |
| Latvia                   | Medium | Medium     | Medium       |
| Mozambique               | Medium | High       | Medium       |
| Malawi                   | Low    | High       | Low          |
| Bhutan                   | Low    | Low        | Low          |
| Central African Republic | Low    | Medium     | Low          |

> **Answer**:
