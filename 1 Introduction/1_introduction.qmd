---
title: "Data Science for Socioeconomists"
subtitle: "Excercise 1 - Introduction"
author: Junbo Huang & Lisa Wegner
format:
  revealjs:
    incremental: false
    transition: none
    background-transition: none
    theme: white
    slide-number: true
    footer: "Data Science for Socioeconomists"
    embed-resources: true
    preview-links: auto 
    smaller: false
editor: visual
code-annotations: below
---

# Agenda for today {#sec-agenda-for-today}

::: incremental
1.  Organisational structures
2.  Input: pair programming & peer reviewing
3.  Groupwork
4.  Jupyter Hub
5.  Questions?
:::

## Introduction {#sec-introduction .smaller}

::::::: columns
:::: {.column width="50%"}
![](https://assets.rrz.uni-hamburg.de/instance_assets/fakmin/27764695/junbo-huang-180x240-ca42c14ad2e0d9ca6f66dad80ed097e27e84ac9b.jpg)

**Junbo Huang**

***research topics:***

::: nonincremental
-   Computational Narrative Understanding
-   Media Narratives Analysis
-   Distance Metric Learning
:::
::::

:::: {.column width="50%"}
![](https://assets.rrz.uni-hamburg.de/instance_assets/fakws/21870574/portrait-wegnerl-230522---180x240-e9003c11c324f3690968d0b930302fd6642e765e.jpg)

**Lisa Wegner**

***research topics:***

::: nonincremental
-   Economic Change
-   Applied Economics and Statistics
-   Narrative Economics
-   Labour Market Policies
:::
::::
:::::::

# Our concept {#sec-our-concept}

exercises take place in rooms WiWi 1005 (Lisa) and WiWi 1004 (Junbo)

::: nonincremental
1.  introduction of tasks for the session and revision of the lecture
2.  pair programming - groups of 3 to 5 people
3.  peer reviewing - talking about different solutions in the plenum
:::

# Timetable {#sec-timetable .smaller}

|            |                                           |
|:----------:|:------------------------------------------|
|  **Date**  | **Topic**                                 |
| 17/10/2024 | Introduction to this course               |
| 24/10/2024 | Introduction to Quarto                    |
| 31/10/2024 | no tutorial                               |
| 07/11/2024 | Data in R                                 |
| 14/11/2024 | Using Principles of Reproducible Research |
| 21/11/2024 | Datavisualization I                       |
| 28/11/2024 | Datavisualization II - Advanced Graphics  |
| 05/12/2024 | Linear regression 1                       |
| 12/12/2024 | Linear regression 2                       |

# Timetable {#sec-timetable2 .smaller}

|    Week    | topic                       |
|:----------:|-----------------------------|
| 19/12/2024 | LPM and logistic regression |
| 09/01/2025 |                             |
| 16/01/2025 |                             |
| 23/01/2025 |                             |
| 30/01/2025 |                             |

# Pair programming? #TODO: what do we want to talk about here? we do not {#sec-pair-programming .illustration}

:::: notes
::: nonincremental
-   Pair Programming is similar to driving a car: there is one driver and one/or more navigators
-   They work as a team:
    -   The navigator gives input and plans the route
    -   The driver then accepts this route or proposes a different route
    -   After both have agreed the driver takes this route
-   In real-time car driving
    -   one passenger might optimize for lowering the consumption of gas
    -   one might optimize for taking the shortest route
    -   and a third one might be optimizing for the most scenic route
    -   the same can happen with pair-programming
-   everyone brings different input to the table - the team decides what route the driver is going to take
-   and similar to driving a car: after being a driver for quite some time they get tired so the positions are switched within the team
:::
::::

|  |
|------------------------------------------------------------------------|
| ![](https://unruly.co/wp-content/uploads/2019/08/Screenshot-2019-08-13-at-16.09.46-1024x439.png){fig-align="center"} |

## Why is pair programming important?[^1] {.smaller}

[^1]:
    ::: incremental
    https://www.codementor.io/pair-programming

    https://medium.com/kayvan-kaseb/the-importance-of-pair-programming-for-developers-4a8b3325f62f
    :::

::: incremental
-   You're able to produce **better solutions**
-   You're able to **share knowledge** within your workflow
-   Everyone's an **expert** in something, and everyone has something to teach
-   Adds **accountability**: When working closely together no one wants to let their partner(s) down
-   Enables you to think and speak about different **alternative approaches**
-   Your **problem-solving abilities** are getting stronger
:::

# Groupwork {#sec-g}

::: panel-tabset
## Pair Programming

-   Pair Programming takes place in small groups of 3 to 5 people
-   You can choose a group freely but binding - once you've joined (e.g.) the ***group number 13*** you're in this team for all exercises in these groups
:::

# Opening the course page #TODO: missing images {#sec-opening-the-course-page}

![](images/Course_page-01.png)

# going to section "sign in for group work" #TODO: missing images {#sec-going-to-section-sign-in-for-group-work}

![](images/sign-in.JPG)

# note on group work {#sec-note-on-group-work}

::: nonincremental
-   these groups are for organisational purpose
-   others (including our team) can see who belongs to which group
-   set groups allow us to trace back your results to your name - and give praise to you ðŸ¤“
-   the files from the exercises can and should not be stored here (there is no folder for that anyway) but should be stored in a shared folder in the Jupyter Hub
:::

# Using Jupyter Hub

# "Homework" {#sec-little-homework}

::: nonincremental
-   Please sign-in into a group via OpenOlat
-   Remember the groups number so you can join the respective group-session in our next Zoom-Meeting when we are opening up the breakout session
:::

# Questions {#sec-eval}

| Is there anything else you would like to know about the exercises?

# Outlook to next tutorial {#sec-outlook}

Next week we will look at:

::: nonincremental
-   Programming with R
-   Using Quarto
-   Using the JupyterHub
:::

We will do the first group-work-tasks!