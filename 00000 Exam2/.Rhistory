1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 28.74500, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 6.574, 7.200, 7.284, NA, 4.694, 6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
View(happiness_data_clean)
View(happiness_data)
data <- data.frame(
adjusted_satisfaction = c(37, NA, 60, 59, 65, NA, 43, 63, 37, 34),
avg_satisfaction = c(4.9, NA, 7.1, 7.2, 7.6, NA, 5.3, 7.2, 4.4, 4.6),
std_satisfaction = c(2.42, 3.19, 1.91, NA, 1.80, 5.0, 2.10, 1.72, 2.02, 2.57),
avg_income = c(2096.760, NA, 7101.120, 19457.040, 19917.000, NA,
1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 28.74500, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 120, 7.200, 7.284, NA, 4.694, 6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
View(happiness_data)
library(readr)
happiness_income_data <- read_csv("happyscore_income_data.csv")
#View(happiness_income_data)
happiness_income_data$country...11 <- NULL
happiness_income_data$country <- happiness_income_data$country...1
happiness_income_data$country...1 <- NULL
data <- data.frame(
adjusted_satisfaction = c(37, NA, 60, 59, 65, NA, 43, 63, 37, 34),
avg_satisfaction = c(4.9, NA, 7.1, 7.2, 7.6, NA, 5.3, 7.2, 4.4, 4.6),
std_satisfaction = c(2.42, 3.19, 1.91, NA, 1.80, 5.0, 2.10, 1.72, 2.02, 2.57),
avg_income = c(2096.760, NA, 7101.120, 19457.040, 19917.000, NA,
1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 28.74500, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 120, 7.200, 7.284, NA, 4.694, 6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
View(happiness_income_data)
library(readr)
happiness_income_data <- read_csv("happyscore_income_data.csv")
#View(happiness_income_data)
happiness_income_data$country...11 <- NULL
happiness_income_data$country <- happiness_income_data$country...1
happiness_income_data$country...1 <- NULL
data <- data.frame(
adjusted_satisfaction = c(37, NA, 60, 59, 65, NA, 43, 63, 37, 34),
avg_satisfaction = c(4.9, NA, 7.1, 7.2, 7.6, NA, 5.3, 7.2, 4.4, 4.6),
std_satisfaction = c(2.42, 3.19, 1.91, NA, 1.80, 5.0, 2.10, 1.72, 2.02, 2.57),
avg_income = c(2096.760, NA, 7101.120, 19457.040, 19917.000, NA,
1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 28.74500, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 12.32, 7.200, 7.284, NA, 4.694, -6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
View(happiness_income_data)
install.packages(openxlsx)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(happiness_income_data, 'export.xlsx')
install.packages("openxlsx")
#install.packages("openxlsx")
library(openxlsx)
write.xlsx(happiness_income_data, 'export.xlsx')
library(readr)
happiness_income_data <- read_csv("happyscore_income_data.csv")
#View(happiness_income_data)
happiness_income_data$country...11 <- NULL
happiness_income_data$country <- happiness_income_data$country...1
happiness_income_data$country...1 <- NULL
data <- data.frame(
adjusted_satisfaction = c(37, NA, 60, 59, 65, NA, 43, 63, 37, 34),
avg_satisfaction = c(4.9, NA, 7.1, 7.2, 7.6, NA, 5.3, 7.2, 4.4, 4.6),
std_satisfaction = c(2.42, 3.19, 1.91, NA, 1.80, 5.0, 2.10, 1.72, 2.02, 2.57),
avg_income = c(2096.760, NA, 7101.120, 19457.040, 19917.000, NA,
1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 113.5, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 12.32, 7.200, 7.284, NA, 4.694, -6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
#install.packages("openxlsx")
library(openxlsx)
write.xlsx(happiness_income_data, 'export.xlsx')
View(happiness_income_data)
gdp_clean <- read.xlsx(GDP_clean_2023)
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1.000.000.000
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1000000000
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$gdp_milliarden <- as.numeric(gdp_clean$GDP_2023/1000000000)
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$GDP_2023 <- as.numeric(gdp_clean$GDP_2023)
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1000000000
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$GDP_2023 <- as.numeric(gdp_clean$GDP_2023)
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1000000000
gdp_clean$country <- gdp_clean$Country.Name
gdp_clean$Country.Name <- NULL
test <- merge(happiness_income_data, gdp_clean, by "country")
test <- merge(happiness_income_data, gdp_clean, by.x = "country", by.y="country")
happiness_income_data_orig <- happiness_income_data
library(readr)
happiness_income_data <- read_csv("happyscore_income_data.csv")
#View(happiness_income_data)
happiness_income_data$country...11 <- NULL
happiness_income_data$country <- happiness_income_data$country...1
happiness_income_data$country...1 <- NULL
happiness_income_data_orig <- happiness_income_data
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$GDP_2023 <- as.numeric(gdp_clean$GDP_2023)
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1000000000
gdp_clean$country <- gdp_clean$Country.Name
gdp_clean$Country.Name <- NULL
happiness_income_data <- merge(happiness_income_data, gdp_clean, by.x = "country", by.y="country")
View(happiness_income_data)
library(readr)
happiness_income_data <- read_csv("happyscore_income_data.csv")
#View(happiness_income_data)
happiness_income_data$country...11 <- NULL
happiness_income_data$country <- happiness_income_data$country...1
happiness_income_data$country...1 <- NULL
happiness_income_data_orig <- happiness_income_data
gdp_clean <- read.xlsx("GDP_clean_2023.xlsx")
gdp_clean$GDP_2023 <- as.numeric(gdp_clean$GDP_2023)
gdp_clean$gdp_milliarden <- gdp_clean$GDP_2023/1000000000
gdp_clean$country <- gdp_clean$Country.Name
gdp_clean$Country.Name <- NULL
happiness_income_data <- merge(happiness_income_data, gdp_clean, by.x = "country", by.y="country", all.x = TRUE)
data <- data.frame(
adjusted_satisfaction = c(37, NA, 60, 59, 65, NA, 43, 63, 37, 34),
avg_satisfaction = c(4.9, NA, 7.1, 7.2, 7.6, NA, 5.3, 7.2, 4.4, 4.6),
std_satisfaction = c(2.42, 3.19, 1.91, NA, 1.80, 5.0, 2.10, 1.72, 2.02, 2.57),
avg_income = c(2096.760, NA, 7101.120, 19457.040, 19917.000, NA,
1265.340, 17168.505, 870.840, 5354.820),
median_income = c(-999, NA, 5109.400, 16879.620, 15846.060, NA,
994.140, 15166.455, 630.240, 4523.565),
income_inequality = c(31.44556, NA, -20.56, 30.29625, 35.28500, NA,
32.66500, 113.5, 39.76000, 34.16250),
region = c('Central and Eastern Europe', 'Sub-Saharan Africa',
'Latin America and Caribbean', 'Western Europe',
'Australia and New Zealand', NA, 'Southern Asia',
'Western Europe', 'Sub-Saharan Africa',
'Central and Eastern Europe'),
happyScore = c(4.350, NA, 12.32, 7.200, 7.284, NA, 4.694, -6.937,
3.587, 4.218),
GDP = c(0.76821, NA, 1.05351, 1.33723, 1.33358, NA, 0.39753,
1.30782, 0.25812, 500000),
country = c('Malawi', 'Zambia', 'Guatemala', 'Sierra Leone',
'Panama', NA, 'Burundi', 'Kazakhstan',
'Ghana', 'Laos')
)
happiness_income_data <- rbind(happiness_income_data, data)
happiness_income_data$GDP <- NULL
options(scipen=999)
model1 <- lm(adjusted_satisfaction ~ avg_income, happiness_income_data_clean)
# load("happiness_income_data.RData") #loading data
load("happiness_income_data.RData")
happiness_income_data$happyScore <- ifelse(
happiness_income_data$happyScore > 10, NA, happiness_income_data$happyScore
)
happiness_income_data$median_income <- ifelse(
happiness_income_data$median_income < 0, NA, happiness_income_data$median_income
)
happiness_income_data$income_inequality <- ifelse(
happiness_income_data$income_inequality < 0 |
happiness_income_data$income_inequality > 100, NA, happiness_income_data$income_inequality
)
happiness_income_data_clean <- na.omit(
happiness_income_data
)
#| echo: false
happiness_income_data_clean <- happiness_income_data_orig
happiness_income_data_clean <- na.omit(happiness_income_data_clean)
#make sure the students have the dataset with real values, not the missings/errors that were intentionally included in task 1.1
summary(happiness_income_data_clean)
options(scipen=999)
model1 <- lm(adjusted_satisfaction ~ avg_income, happiness_income_data_clean)
summary(model1)
install.RStudio()
setwd("Z:/wiso/SozOek_EmpWifo/Lehre/L_BA/Data_Science_DDLITLAB/WiSe_24_25/Tutorials/Exam2_Draft")
library(readr)
energy <- read_csv("energy.csv")
View(energy)
linear_model <- lm(CO2_emmission ~ year + GDP + Population, data = energy)
linear_model <- lm(CO2_emission ~ year + GDP + Population, data = energy)
linear_model <- lm(CO2_emission ~ Year + GDP + Population, data = energy)
summary(linear_model)
linear_model <- lm(CO2_emission ~ Year + GDP + Population, data = energy)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Year + GDP + Population, data = energy)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Year + GDP + Population, data = energy)
summary(linear_model)
library(ggplot2)
ggplot()+
geom_bar(energy$CO2_emission)
library(ggplot2)
ggplot(data = energy)+
geom_bar(mapping=aes(CO2_emission))
View(energy)
library(ggplot2)
ggplot(data = energy)+
geom_boxplot(mapping=aes(CO2_emission))
summary(energy)
energy_clean <- na.omit(energy)
summary(energy_clean)
View(energy)
energy_clean <- na.omit(energy)
energy_clean$Country_factor <- as.factor (energy_clean$Country)
energy_clean <- na.omit(energy)
energy_clean$Country_factor <- as.factor (energy_clean$Country)
energy_clean$Energy_type_factor <- as.factor (energy_clean$Energy_type)
View(energy_clean)
View(energy_clean)
library(dplyr)
yearly_co2 <- energy_clean %>%
group_by(Country, Year) %>%
summarise(yearly_co2 = sum(CO2_emission, na.rm = TRUE)) %>%
ungroup()
# Füge die yearly_co2 Spalte zurück zur Originaltabelle hinzu
data <- data %>%
left_join(yearly_co2, by = c("Country", "Year"))
# Füge die yearly_co2 Spalte zurück zur Originaltabelle hinzu
energy_clean <- energy_clean %>%
left_join(yearly_co2, by = c("Country", "Year"))
View(energy_clean)
energy_clean <- na.omit(energy)
energy_clean$Country_factor <- as.factor (energy_clean$Country)
energy_clean$Energy_type_factor <- as.factor (energy_clean$Energy_type)
library(dplyr)
energy_clean <- energy_clean %>%
# Finde den CO2_Wert für "all_energy_types" für jedes Land und Jahr
group_by(Country, Year) %>%
mutate(yearly_total_co2 = CO2_emission[Energy_type == "all_energy_types"]) %>%
ungroup()
View(energy_clean)
energy_clean_2019 <- energy_clean %>%
filter(Year >= 2019)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Energy_type_factor == "all_energy_types")
summary(energy_clean_2019)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_intensity_per_capita + GDP + Population, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_consumption + GDP + Population, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_consumption + Energy_production + Energy_intensity_per_capita, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_consumption + Energy_production + Energy_intensity_per_capita + Energy_intensity_by_GDP, data = energy_clean_2019)
summary(linear_model)
energy_clean <- na.omit(energy)
energy_clean$Country_factor <- as.factor (energy_clean$Country)
energy_clean_2019 <- energy_clean %>%
filter(Year >= 2019)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Energy_type == "all_energy_types")
summary(energy_clean_2019)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_consumption + Energy_production + Energy_intensity_per_capita + Energy_intensity_by_GDP, data = energy_clean_2019)
summary(linear_model)
energy_clean_2019$energy_difference <- energy_clean_2019$energy_production - energy_clean_2019$Energy_consumption
energy_clean_2019$energy_difference <- energy_clean_2019$Energy_production - energy_clean_2019$Energy_consumption
energy_clean_2019$energy_difference <- energy_clean_2019$Energy_production - energy_clean_2019$Energy_consumption
if(energy_clean_2019$energy_difference <0, energy_clean_2019$net_producer = 1, energy_clean_2019$net_producer )
mean(energy_clean_2019$CO2_emission)
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019$CO2_emission < mean_CO2_emission,
"no",
"yes"
)
energy_clean_2019$high_Co2_factor <- factor(
energy_clean_2019$high_Co2,
levels = c("no", "yes"),  # Define the order
labels = c(0, 1)          # Assign numeric labels
)
View(energy_clean_2019)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019$CO2_emission < mean_CO2_emission,
"no",
"yes"
)
energy_clean_2019$high_Co2_factor <- factor(
energy_clean_2019$high_Co2,
levels = c("no", "yes"),
labels = c(0, 1)
)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
print(mean_CO2_emission)
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019$CO2_emission < mean_CO2_emission,
"no",
"yes"
)
energy_clean_2019$high_Co2_factor <- factor(
energy_clean_2019$high_Co2,
levels = c("no", "yes"),
labels = c(0, 1)
)
logistic_model <- glm(high_Co2_factor ~ CO2_emission ~ Energy_consumption + Energy_production + Energy_intensity_per_capita + Energy_intensity_by_GDP, family = binomial, data = energy_clean_2019)
logistic_model <- glm(high_Co2_factor ~ Energy_consumption + Energy_production + Energy_intensity_per_capita + Energy_intensity_by_GDP, family = binomial, data = energy_clean_2019)
summary(logistic_model)
View(energy_clean_2019)
logistic_model <- glm(high_Co2_factor ~ Energy_intensity_per_capita + Energy_intensity_by_GDP, family = binomial, data = energy_clean_2019)
summary(logistic_model)
logistic_model <- glm(high_Co2_factor ~ Energy_consumption + Energy_production , family = binomial, data = energy_clean_2019)
summary(logistic_model)
logistic_model <- glm(high_Co2_factor ~ Population + GDP , family = binomial, data = energy_clean_2019)
summary(logistic_model)
logistic_model <- glm(high_Co2_factor ~ Energy_intensity_by_GDP + Energy_intensity_by_capita , family = binomial, data = energy_clean_2019)
logistic_model <- glm(high_Co2_factor ~ Energy_intensity_by_GDP + Energy_intensity_per_capita , family = binomial, data = energy_clean_2019)
summary(logistic_model)
energy_clean_2019$energy_difference <- energy_clean_2019$Energy_production - energy_clean_2019$Energy_consumption
negative_threshold <- 0
energy_clean_2019$net_energy_producer <- ifelse(
energy_clean_2019$energy_difference < 0,
0,  # Not a net producer
1   # Net producer
)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
print(mean_CO2_emission)
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019$CO2_emission < mean_CO2_emission,
"no",
"yes"
)
energy_clean_2019$high_Co2_factor <- factor(
energy_clean_2019$high_Co2,
levels = c("no", "yes"),
labels = c(0, 1)
)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ net_energy_producer + Energy_intensity_per_capita + Energy_intensity_by_GDP, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_intensity_per_capita + Energy_intensity_by_GDP, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_intensity_per_capita + Energy_intensity_by_GDP+ Population+ GDP, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Energy_intensity_per_capita + Energy_intensity_by_GDP, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Population + GDP + net_energy_producer, data = energy_clean_2019)
summary(linear_model)
options(scipen = 999)
linear_model <- lm(CO2_emission ~ Population + GDP , data = energy_clean_2019)
summary(linear_model)
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
print(paste("The mean CO2 emission worldwide is:",mean_CO2_emission)
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
mean_CO2_emission <- mean(energy_clean_2019$CO2_emission)
print(paste("The mean CO2 emission worldwide is:",mean_CO2_emission))
energy_clean_2019$high_Co2 <- ifelse(
energy_clean_2019$CO2_emission < mean_CO2_emission,
"no",
"yes"
)
energy_clean_2019$high_Co2_factor <- factor(
energy_clean_2019$high_Co2,
levels = c("no", "yes"),
labels = c(0, 1)
)
library(ggplot2)
ggplot(data=enery_clean) +
geom_point(mapping=aes(x=GDP,y=CO2_emission))
library(ggplot2)
ggplot(data=energy_clean_2019) +
geom_point(mapping=aes(x=GDP,y=CO2_emission))
energy_clean_2019 <- energy_clean_2019 %>%
filter(Country != "World")
library(ggplot2)
ggplot(data=energy_clean_2019) +
geom_point(mapping=aes(x=GDP,y=CO2_emission))
library(ggplot2)
ggplot(data=energy_clean_2019) +
geom_point(mapping=aes(x=Population,y=CO2_emission))
library(ggplot2)
ggplot(data=energy_clean_2019) +
geom_point(mapping=aes(x=Population,y=GDP))
library(ggplot2)
ggplot(data=energy_clean) +
geom_point(mapping=aes(x=Population,y=GDP))
energy_clean_Germany <- energy_clean %>%
filter(Country == "Germany")
View(energy_clean_Germany)
library(ggplot2)
energy_clean_Germany <- energy_clean %>%
filter(Country == "Germany")
energy_clean_Germany <- energy_clean_Germany %>%
filter(Country == "all_energy_types")
ggplot(data=energy_clean) +
geom_point(mapping=aes(x=Year,y=CO2_emission))
library(ggplot2)
energy_clean_Germany <- energy_clean %>%
filter(Country == "Germany")
energy_clean_Germany <- energy_clean_Germany %>%
filter(Country == "all_energy_types")
ggplot(data=energy_clean_Germany) +
geom_point(mapping=aes(x=Year,y=CO2_emission))
energy_clean_Germany <- energy_clean %>%
filter(Country == "Germany")
energy_clean_Germany <- energy_clean_Germany %>%
filter(Energy_Type == "all_energy_types")
energy_clean_Germany <- energy_clean %>%
filter(Country == "Germany")
energy_clean_Germany <- energy_clean_Germany %>%
filter(Energy_type == "all_energy_types")
ggplot(data=energy_clean_Germany) +
geom_point(mapping=aes(x=Year,y=CO2_emission))
ggplot(data=energy_clean_Germany) +
geom_point(mapping=aes(x=Year,y=CO2_emission)) +
geom_smooth(formular = y ~ x)
ggplot(data=energy_clean_Germany) +
geom_point(mapping=aes(x=Year,y=CO2_emission)) +
geom_smooth(method = lm)
ggplot(data=energy_clean_Germany, mapping=aes(x=Year,y=CO2_emission)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data=energy_clean_Germany, mapping=aes(x=Year,y=CO2_emission)) +
geom_point() +
geom_smooth(method = lm) +
labs( x = "Year", y= "CO2-Emissions" )
ggplot(data=energy_clean_2019, mapping=aes(x=Energy_consumption,y=CO2_emission)) +
geom_point() +
geom_smooth(method = lm)
